#!/usr/bin/python3
# Copyright (c) 2008 Alon Swartz <alon@turnkeylinux.org> - all rights reserved

import os
import debconf

from common import system, Chroot, PIPE

pkgs_to_clean = ['di-live', 'live-boot', 'live-tools',
                 'live-boot-initramfs-tools']


def clean_target_pkgs(*pkgs, path='/target'):
    """Clean up unrequired pkgs from installed system"""
    chroot = Chroot(path)
    chroot.system('apt', 'purge', '-y', *pkgs, stdout=PIPE)
    chroot.exit()


def deep_umount(target):
    system("swapoff", "-a")
    paths = []
    with open("/proc/mounts", 'r') as fob:
        for mount in fob.readlines():
            path = mount.split()[1]
            if path.startswith(target):
                paths.append(path)

    paths.sort(reverse=True)
    for path in paths:
        try:
            system("umount", "-f", path)
        except:
            pass


def reboot():

    template = 'di-live/reboot_now'

    debconf.runFrontEnd()
    db = debconf.Debconf()

    db.capb('backup')
    db.reset(template)
    db.input(debconf.HIGH, template)
    db.go()

    cmd = []
    fgvt = os.environ.get("FGVT")
    if fgvt:
        cmd.append("chvt {}".format(fgvt))

    if db.getBoolean(template):
        cmd.append("/usr/bin/systemctl reboot")

    if cmd:
        if len(cmd) == 1:
            # just reboot?!
            system(command.split(), write_log=False)
        elif len(cmd) == 2:
            # chvt & reboot
            system("; ".join(cmd), shell=True, write_log=False)


def main():
    clean_target_pkgs(*pkgs_to_clean, path='/target')
    deep_umount('/target')
    open('/tmp/.di-live-finalize', 'w').close()
    reboot()


if __name__ == "__main__":
    main()
